function M(){}const z=t=>t;function k(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function D(){return Object.create(null)}function j(t){t.forEach(w)}function F(t){return typeof t=="function"}function P(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let i;function S(t,n){return t===n?!0:(i||(i=document.createElement("a")),i.href=n,t===i.href)}function U(t){return Object.keys(t).length===0}function A(t,n,e,o){if(t){const r=b(t,n,e,o);return t[0](r)}}function b(t,n,e,o){return t[1]&&o?k(e.ctx.slice(),t[1](o(n))):e.ctx}function B(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(n.dirty===void 0)return r;if(typeof r=="object"){const l=[],_=Math.max(n.dirty.length,r.length);for(let s=0;s<_;s+=1)l[s]=n.dirty[s]|r[s];return l}return n.dirty|r}return n.dirty}function C(t,n,e,o,r,l){if(r){const _=b(n,e,o,l);t.p(_,r)}}function G(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}let f;function h(t){f=t}function g(){if(!f)throw new Error("Function called outside component initialization");return f}function H(t){g().$$.on_mount.push(t)}function I(t){g().$$.after_update.push(t)}function J(t){g().$$.on_destroy.push(t)}const a=[],y=[];let u=[];const m=[],x=Promise.resolve();let p=!1;function E(){p||(p=!0,x.then(v))}function K(){return E(),x}function q(t){u.push(t)}const d=new Set;let c=0;function v(){if(c!==0)return;const t=f;do{try{for(;c<a.length;){const n=a[c];c++,h(n),O(n.$$)}}catch(n){throw a.length=0,c=0,n}for(h(null),a.length=0,c=0;y.length;)y.pop()();for(let n=0;n<u.length;n+=1){const e=u[n];d.has(e)||(d.add(e),e())}u.length=0}while(a.length);for(;m.length;)m.pop()();p=!1,d.clear(),h(t)}function O(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(q)}}function L(t){const n=[],e=[];u.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),u=n}export{I as a,y as b,A as c,B as d,S as e,q as f,G as g,J as h,F as i,z as j,D as k,v as l,U as m,M as n,H as o,L as p,f as q,j as r,P as s,K as t,C as u,h as v,w,a as x,E as y};
